// Fish guide page functionality
class FishGuidePage {
    constructor() {
        this.fishData = this.getFishData();
        this.filteredFish = [...this.fishData];
        this.currentCategory = 'all';
        this.currentSort = 'name';
        this.searchQuery = '';
        this.init();
    }

    init() {
        this.initMobileMenu();
        this.initSearch();
        this.initFilters();
        this.initSort();
        this.renderFishGrid();
        this.updateResultsCount();
    }

    // Mobile menu functionality
    initMobileMenu() {
        const mobileMenuBtn = document.getElementById('mobile-menu-btn');
        const mobileMenu = document.getElementById('mobile-menu');

        if (mobileMenuBtn && mobileMenu) {
            mobileMenuBtn.addEventListener('click', () => {
                mobileMenu.classList.toggle('hidden');
            });
        }
    }

    // Initialize search functionality
    initSearch() {
        const searchInput = document.getElementById('search-input');
        if (searchInput) {
            searchInput.addEventListener('input', (e) => {
                this.searchQuery = e.target.value.toLowerCase();
                this.applyFilters();
            });
        }
    }

    // Initialize category filters
    initFilters() {
        const filterButtons = document.querySelectorAll('.category-filter');
        filterButtons.forEach(button => {
            button.addEventListener('click', (e) => {
                // Update active state
                filterButtons.forEach(btn => btn.classList.remove('active'));
                e.target.classList.add('active');
                
                // Update current category
                this.currentCategory = e.target.dataset.category;
                this.applyFilters();
            });
        });
    }

    // Initialize sort functionality
    initSort() {
        const sortSelect = document.getElementById('sort-select');
        if (sortSelect) {
            sortSelect.addEventListener('change', (e) => {
                this.currentSort = e.target.value;
                this.applyFilters();
            });
        }
    }

    // Apply all filters and search
    applyFilters() {
        let filtered = [...this.fishData];

        // Apply category filter
        if (this.currentCategory !== 'all') {
            filtered = filtered.filter(fish => fish.category === this.currentCategory);
        }

        // Apply search filter
        if (this.searchQuery) {
            filtered = filtered.filter(fish => 
                fish.name.toLowerCase().includes(this.searchQuery) ||
                fish.scientificName.toLowerCase().includes(this.searchQuery) ||
                fish.description.toLowerCase().includes(this.searchQuery) ||
                fish.habitat.toLowerCase().includes(this.searchQuery)
            );
        }

        // Apply sorting
        filtered.sort((a, b) => {
            switch (this.currentSort) {
                case 'name':
                    return a.name.localeCompare(b.name);
                case 'difficulty':
                    const difficultyOrder = { 'easy': 1, 'medium': 2, 'hard': 3 };
                    return difficultyOrder[a.difficulty] - difficultyOrder[b.difficulty];
                case 'popularity':
                    return b.popularity - a.popularity;
                default:
                    return 0;
            }
        });

        this.filteredFish = filtered;
        this.renderFishGrid();
        this.updateResultsCount();
    }

    // Render fish grid
    renderFishGrid() {
        const container = document.getElementById('fish-container');
        if (!container) return;

        container.innerHTML = '';

        this.filteredFish.forEach((fish, index) => {
            const fishCard = this.createFishCard(fish, index);
            container.appendChild(fishCard);
        });

        // Animate cards
        anime({
            targets: '.fish-card',
            opacity: [0, 1],
            translateY: [20, 0],
            delay: anime.stagger(100),
            duration: 600,
            easing: 'easeOutQuad'
        });
    }

    // Create fish card element
    createFishCard(fish, index) {
        const card = document.createElement('div');
        card.className = 'fish-card bg-white rounded-2xl shadow-lg overflow-hidden';
        card.style.opacity = '0';
        
        const difficultyColors = {
            easy: 'difficulty-easy',
            medium: 'difficulty-medium',
            hard: 'difficulty-hard'
        };

        const difficultyLabels = {
            easy: '–õ–µ–≥–∫–æ',
            medium: '–°—Ä–µ–¥–Ω–µ',
            hard: '–°–ª–æ–∂–Ω–æ'
        };

        card.innerHTML = `
            <div class="h-48 bg-gradient-to-br ${fish.gradient} relative">
                <div class="absolute inset-0 flex items-center justify-center">
                    <span class="text-6xl">${fish.emoji}</span>
                </div>
                <div class="absolute top-4 right-4 bg-white/90 backdrop-blur-sm rounded-full px-3 py-1">
                    <span class="text-sm font-semibold text-slate-700">${fish.popularity}/5 ‚≠ê</span>
                </div>
                <div class="absolute top-4 left-4 bg-white/90 backdrop-blur-sm rounded-full px-3 py-1">
                    <span class="text-xs font-medium text-slate-700">${fish.category === 'predatory' ? '–•–∏—â–Ω–∞—è' : fish.category === 'peaceful' ? '–ú–∏—Ä–Ω–∞—è' : '–†–µ–¥–∫–∞—è'}</span>
                </div>
            </div>
            
            <div class="p-6">
                <h3 class="font-display text-xl font-bold text-slate-800 mb-2">${fish.name}</h3>
                <p class="text-sm text-slate-500 mb-3 italic">${fish.scientificName}</p>
                
                <div class="space-y-2 mb-4">
                    <div class="flex items-center text-sm text-slate-600">
                        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
                        </svg>
                        ${fish.habitat}
                    </div>
                    <div class="flex items-center text-sm text-slate-600">
                        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path>
                        </svg>
                        <span class="${difficultyColors[fish.difficulty]}">${difficultyLabels[fish.difficulty]}</span>
                    </div>
                </div>
                
                <div class="flex items-center justify-between mb-4">
                    <div class="flex items-center space-x-2">
                        <span class="text-sm text-slate-600">–°–µ–∑–æ–Ω:</span>
                        <div class="flex space-x-1">
                            ${fish.seasons.map(season => `
                                <div class="season-indicator season-${season}" title="${this.getSeasonName(season)}"></div>
                            `).join('')}
                        </div>
                    </div>
                </div>
                
                <p class="text-sm text-slate-600 mb-4 line-clamp-3">${fish.description}</p>
                
                <button onclick="showFishDetails('${fish.id}')" class="w-full bg-lake-blue hover:bg-blue-800 text-white px-4 py-2 rounded-xl font-semibold transition-all duration-300">
                    –ü–æ–¥—Ä–æ–±–Ω–µ–µ
                </button>
            </div>
        `;

        return card;
    }

    // Get season name
    getSeasonName(season) {
        const seasonNames = {
            spring: '–í–µ—Å–Ω–∞',
            summer: '–õ–µ—Ç–æ',
            autumn: '–û—Å–µ–Ω—å',
            winter: '–ó–∏–º–∞'
        };
        return seasonNames[season] || season;
    }

    // Update results count
    updateResultsCount() {
        const countElement = document.getElementById('results-count');
        if (countElement) {
            countElement.textContent = this.filteredFish.length;
        }
    }

    // Get fish data
    getFishData() {
        return [
            {
                id: 'pike',
                name: '–©—É–∫–∞',
                scientificName: 'Esox lucius',
                emoji: 'üêü',
                gradient: 'from-blue-400 to-blue-600',
                category: 'predatory',
                difficulty: 'medium',
                popularity: 5,
                seasons: ['spring', 'autumn', 'winter'],
                habitat: '–†–µ–∫–∏, –æ–∑–µ—Ä–∞, –≤–æ–¥–æ—Ö—Ä–∞–Ω–∏–ª–∏—â–∞',
                description: '–ö—Ä—É–ø–Ω–∞—è —Ö–∏—â–Ω–∞—è —Ä—ã–±–∞ —Å –≤—ã—Ç—è–Ω—É—Ç—ã–º —Ç–µ–ª–æ–º –∏ –æ—Å—Ç—Ä—ã–º–∏ –∑—É–±–∞–º–∏. –ò–∑–≤–µ—Å—Ç–Ω–∞ —Å–≤–æ–µ–π –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ—Å—Ç—å—é –∏ —Å–∏–ª–æ–π.',
                size: '–î–æ 150 —Å–º, –≤–µ—Å –¥–æ 35 –∫–≥',
                lifespan: '15-25 –ª–µ—Ç',
                diet: '–†—ã–±–∞, –ª—è–≥—É—à–∫–∏, –º–µ–ª–∫–∏–µ –º–ª–µ–∫–æ–ø–∏—Ç–∞—é—â–∏–µ',
                bestBait: '–í–æ–±–ª–µ—Ä—ã, –±–ª–µ—Å–Ω—ã, –∂–∏–≤–µ—Ü',
                bestTime: '–†–∞—Å—Å–≤–µ—Ç –∏ –∑–∞–∫—É—Å–∫',
                tips: '–õ—É—á—à–µ –≤—Å–µ–≥–æ –ª–æ–≤–∏—Ç—å –≤ –ø—Ä–æ–≤–æ–¥–∫—É —Å –±—ã—Å—Ç—Ä–æ–π —Å–∫–æ—Ä–æ—Å—Ç—å—é. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ—Ç–∞–ª–ª–∏—á–µ—Å–∫–∏–µ –ø–æ–≤–æ–¥–∫–∏.',
                regulations: '–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä 45 —Å–º –≤ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–µ —Ä–µ–≥–∏–æ–Ω–æ–≤'
            },
            {
                id: 'perch',
                name: '–û–∫—É–Ω—å',
                scientificName: 'Perca fluviatilis',
                emoji: 'üê†',
                gradient: 'from-orange-400 to-red-500',
                category: 'predatory',
                difficulty: 'easy',
                popularity: 5,
                seasons: ['spring', 'summer', 'autumn', 'winter'],
                habitat: '–†–µ–∫–∏, –æ–∑–µ—Ä–∞, –ø—Ä—É–¥—ã',
                description: '–ú–µ–ª–∫–∞—è —Ö–∏—â–Ω–∞—è —Ä—ã–±–∞ —Å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–Ω—ã–º–∏ –ø–æ–ª–æ—Å–∞–º–∏ –Ω–∞ —Ç–µ–ª–µ. –û—á–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–∞ –∏ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∞.',
                size: '–î–æ 50 —Å–º, –æ–±—ã—á–Ω–æ 15-25 —Å–º',
                lifespan: '8-12 –ª–µ—Ç',
                diet: '–ú–µ–ª–∫–∞—è —Ä—ã–±–∞, —Ä–∞—á–∫–∏, –Ω–∞—Å–µ–∫–æ–º—ã–µ',
                bestBait: '–ú–æ—Ä–º—ã—à–∫–∏, –±–ª–µ—Å–Ω—ã, —á–µ—Ä–≤–∏',
                bestTime: '–í–µ—Å—å –¥–µ–Ω—å, –æ—Å–æ–±–µ–Ω–Ω–æ —É—Ç—Ä–æ',
                tips: '–û–∫—É–Ω—å –ª—é–±–∏—Ç —Å—Ç–∞–π–Ω—É—é –ª–æ–≤–ª—é. –ù–∞–π–¥–∏—Ç–µ –æ–¥–Ω–æ–≥–æ - –Ω–∞–π–¥–µ—Ç–µ –¥–µ—Å—è—Ç–æ–∫.',
                regulations: '–ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –ø–æ —Ä–∞–∑–º–µ—Ä—É –≤ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–µ —Ä–µ–≥–∏–æ–Ω–æ–≤'
            },
            {
                id: 'carp',
                name: '–ö–∞—Ä–ø',
                scientificName: 'Cyprinus carpio',
                emoji: 'üê°',
                gradient: 'from-green-400 to-green-600',
                category: 'peaceful',
                difficulty: 'medium',
                popularity: 4,
                seasons: ['spring', 'summer', 'autumn'],
                habitat: '–û–∑–µ—Ä–∞, –ø—Ä—É–¥—ã, –º–µ–¥–ª–µ–Ω–Ω—ã–µ —Ä–µ–∫–∏',
                description: '–ö—Ä—É–ø–Ω–∞—è –º–∏—Ä–Ω–∞—è —Ä—ã–±–∞ —Å —É—Å–∏–∫–∞–º–∏. –û—á–µ–Ω—å –æ—Å—Ç–æ—Ä–æ–∂–Ω–∞ –∏ —Ç—Ä–µ–±—É–µ—Ç —Ç–µ—Ä–ø–µ–Ω–∏—è –≤ –ª–æ–≤–ª–µ.',
                size: '–î–æ 120 —Å–º, –≤–µ—Å –¥–æ 40 –∫–≥',
                lifespan: '20-50 –ª–µ—Ç',
                diet: '–†–∞—Å—Ç–∏—Ç–µ–ª—å–Ω–∞—è –ø–∏—â–∞, –º–æ–ª–ª—é—Å–∫–∏, —á–µ—Ä–≤–∏',
                bestBait: '–ö—É–∫—É—Ä—É–∑–∞, –±–æ–π–ª—ã, —á–µ—Ä–≤–∏',
                bestTime: '–ù–æ—á—å –∏ —Ä–∞–Ω–Ω–µ–µ —É—Ç—Ä–æ',
                tips: '–ö–∞—Ä–ø –æ—á–µ–Ω—å –æ—Å—Ç–æ—Ä–æ–∂–µ–Ω. –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —à—É–º –∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –ø—Ä–∏–∫–æ—Ä–º–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã.',
                regulations: '–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä 30-50 —Å–º –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–≥–∏–æ–Ω–∞'
            },
            {
                id: 'bream',
                name: '–õ–µ—â',
                scientificName: 'Abramis brama',
                emoji: 'üêü',
                gradient: 'from-purple-400 to-purple-600',
                category: 'peaceful',
                difficulty: 'easy',
                popularity: 4,
                seasons: ['spring', 'summer', 'autumn'],
                habitat: '–†–µ–∫–∏, –æ–∑–µ—Ä–∞, –≤–æ–¥–æ—Ö—Ä–∞–Ω–∏–ª–∏—â–∞',
                description: '–í—ã—Å–æ–∫–∞—è —Å–∂–∞—Ç–∞—è —Ä—ã–±–∞ —Å–µ—Ä–µ–±—Ä–∏—Å—Ç–æ–≥–æ —Ü–≤–µ—Ç–∞. –¶–µ–Ω–∏—Ç—Å—è –∑–∞ –≤–∫—É—Å–Ω–æ–µ –º—è—Å–æ –∏ –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–µ–≤.',
                size: '–î–æ 80 —Å–º, –≤–µ—Å –¥–æ 8 –∫–≥',
                lifespan: '15-20 –ª–µ—Ç',
                diet: '–ß–µ—Ä–≤–∏, –º–æ–ª–ª—é—Å–∫–∏, —Ä–∞—Å—Ç–∏—Ç–µ–ª—å–Ω–∞—è –ø–∏—â–∞',
                bestBait: '–ß–µ—Ä–≤–∏, –º–æ—Ç—ã–ª—å, –æ–ø–∞—Ä—ã—à',
                bestTime: '–£—Ç—Ä–æ –∏ –≤–µ—á–µ—Ä',
                tips: '–õ–µ—â –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç –≥–ª—É–±–æ–∫–∏–µ —É—á–∞—Å—Ç–∫–∏ —Å —Ç–µ—á–µ–Ω–∏–µ–º. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–∏–¥–µ—Ä–Ω—É—é —Å–Ω–∞—Å—Ç—å.',
                regulations: '–ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –ø–æ —Ä–∞–∑–º–µ—Ä—É –≤ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–µ —Ä–µ–≥–∏–æ–Ω–æ–≤'
            },
            {
                id: 'salmon',
                name: '–õ–æ—Å–æ—Å—å',
                scientificName: 'Salmo salar',
                emoji: 'üêü',
                gradient: 'from-pink-400 to-red-500',
                category: 'predatory',
                difficulty: 'hard',
                popularity: 5,
                seasons: ['summer', 'autumn'],
                habitat: '–°–µ–≤–µ—Ä–Ω—ã–µ —Ä–µ–∫–∏ –∏ –æ–∑–µ—Ä–∞',
                description: '–¶–µ–Ω–Ω–∞—è –ø—Ä–æ–º—ã—Å–ª–æ–≤–∞—è —Ä—ã–±–∞, –º–∏–≥—Ä–∏—Ä—É—é—â–∞—è –º–µ–∂–¥—É –º–æ—Ä–µ–º –∏ –ø—Ä–µ—Å–Ω–æ–π –≤–æ–¥–æ–π.',
                size: '–î–æ 150 —Å–º, –≤–µ—Å –¥–æ 40 –∫–≥',
                lifespan: '3-8 –ª–µ—Ç',
                diet: '–†—ã–±–∞, —Ä–∞–∫–æ–æ–±—Ä–∞–∑–Ω—ã–µ, –Ω–∞—Å–µ–∫–æ–º—ã–µ',
                bestBait: '–ú—É—à–∫–∏, –±–ª–µ—Å–Ω—ã, –≤–æ–±–ª–µ—Ä—ã',
                bestTime: '–†–∞—Å—Å–≤–µ—Ç –∏ –∑–∞–∫—É—Å–∫',
                tips: '–¢—Ä–µ–±—É–µ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–π –ª–∏—Ü–µ–Ω–∑–∏–∏. –õ—É—á—à–µ –≤—Å–µ–≥–æ –ª–æ–≤–∏—Ç—å –Ω–∞—Ö–ª—ã—Å—Ç–æ–º –≤ —á–∏—Å—Ç–æ–π –≤–æ–¥–µ.',
                regulations: '–¢—Ä–µ–±—É–µ—Ç—Å—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –ª–∏—Ü–µ–Ω–∑–∏—è, —Å—Ç—Ä–æ–≥–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è'
            },
            {
                id: 'catfish',
                name: '–°–æ–º',
                scientificName: 'Silurus glanis',
                emoji: 'üêü',
                gradient: 'from-gray-400 to-gray-600',
                category: 'predatory',
                difficulty: 'hard',
                popularity: 4,
                seasons: ['spring', 'summer', 'autumn'],
                habitat: '–ö—Ä—É–ø–Ω—ã–µ —Ä–µ–∫–∏ –∏ –æ–∑–µ—Ä–∞',
                description: '–ö—Ä—É–ø–Ω–∞—è —Ö–∏—â–Ω–∞—è —Ä—ã–±–∞ —Å —É—Å–∏–∫–∞–º–∏. –ê–∫—Ç–∏–≤–Ω–∞ –Ω–æ—á—å—é –∏ –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç –≥–ª—É–±–æ–∫–∏–µ —è–º—ã.',
                size: '–î–æ 500 —Å–º, –≤–µ—Å –¥–æ 300 –∫–≥',
                lifespan: '30-60 –ª–µ—Ç',
                diet: '–†—ã–±–∞, –ª—è–≥—É—à–∫–∏, –ø—Ç–∏—Ü—ã, –º–µ–ª–∫–∏–µ –º–ª–µ–∫–æ–ø–∏—Ç–∞—é—â–∏–µ',
                bestBait: '–ö—Ä—É–ø–Ω—ã–µ –≤–æ–±–ª–µ—Ä—ã, —Å–∏–ª–∏–∫–æ–Ω, –∂–∏–≤–µ—Ü',
                bestTime: '–ù–æ—á—å',
                tips: '–°–æ–º - –Ω–æ—á–Ω–æ–π —Ö–∏—â–Ω–∏–∫. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫—Ä—É–ø–Ω—ã–µ –ø—Ä–∏–º–∞–Ω–∫–∏ –∏ –º–æ—â–Ω—É—é —Å–Ω–∞—Å—Ç—å.',
                regulations: '–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä 70-100 —Å–º –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–≥–∏–æ–Ω–∞'
            },
            {
                id: 'pikeperch',
                name: '–°—É–¥–∞–∫',
                scientificName: 'Sander lucioperca',
                emoji: 'üêü',
                gradient: 'from-yellow-400 to-orange-500',
                category: 'predatory',
                difficulty: 'medium',
                popularity: 4,
                seasons: ['spring', 'autumn', 'winter'],
                habitat: '–†–µ–∫–∏, –æ–∑–µ—Ä–∞, –≤–æ–¥–æ—Ö—Ä–∞–Ω–∏–ª–∏—â–∞',
                description: '–•–∏—â–Ω–∞—è —Ä—ã–±–∞ —Å –æ—Å—Ç—Ä—ã–º–∏ –∑—É–±–∞–º–∏. –¶–µ–Ω–∏—Ç—Å—è –∑–∞ –≤–∫—É—Å–Ω–æ–µ –±–µ–ª–æ–µ –º—è—Å–æ.',
                size: '–î–æ 130 —Å–º, –≤–µ—Å –¥–æ 20 –∫–≥',
                lifespan: '10-20 –ª–µ—Ç',
                diet: '–†—ã–±–∞, —Ä–∞–∫–æ–æ–±—Ä–∞–∑–Ω—ã–µ',
                bestBait: '–í–æ–±–ª–µ—Ä—ã, –±–ª–µ—Å–Ω—ã, —Ç–≤–∏—Å—Ç–µ—Ä—ã',
                bestTime: '–ù–æ—á—å –∏ —Ä–∞–Ω–Ω–µ–µ —É—Ç—Ä–æ',
                tips: '–°—É–¥–∞–∫ –ª—é–±–∏—Ç –≥–ª—É–±–æ–∫–∏–µ —è–º—ã –∏ –ø–µ—Ä–µ–∫–∞—Ç—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä–∏–º–∞–Ω–∫–∏ –Ω–∞ –¥–Ω–µ.',
                regulations: '–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä 40-50 —Å–º –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–≥–∏–æ–Ω–∞'
            },
            {
                id: 'crucian',
                name: '–ö–∞—Ä–∞—Å—å',
                scientificName: 'Carassius carassius',
                emoji: 'üê†',
                gradient: 'from-amber-400 to-orange-500',
                category: 'peaceful',
                difficulty: 'easy',
                popularity: 3,
                seasons: ['spring', 'summer', 'autumn'],
                habitat: '–ü—Ä—É–¥—ã, –æ–∑–µ—Ä–∞, –º–µ–¥–ª–µ–Ω–Ω—ã–µ —Ä–µ–∫–∏',
                description: '–ú–∏—Ä–Ω–∞—è —Ä—ã–±–∞ –∑–æ–ª–æ—Ç–∏—Å—Ç–æ–≥–æ —Ü–≤–µ—Ç–∞. –û—á–µ–Ω—å –≤—ã–Ω–æ—Å–ª–∏–≤–∞ –∏ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∞.',
                size: '–î–æ 45 —Å–º, –æ–±—ã—á–Ω–æ 15-25 —Å–º',
                lifespan: '10-15 –ª–µ—Ç',
                diet: '–†–∞—Å—Ç–∏—Ç–µ–ª—å–Ω–∞—è –ø–∏—â–∞, —á–µ—Ä–≤–∏, –Ω–∞—Å–µ–∫–æ–º—ã–µ',
                bestBait: '–ß–µ—Ä–≤–∏, —Ö–ª–µ–±, –∫—É–∫—É—Ä—É–∑–∞',
                bestTime: '–£—Ç—Ä–æ –∏ –≤–µ—á–µ—Ä',
                tips: '–ö–∞—Ä–∞—Å—å –Ω–µ–ø—Ä–∏—Ö–æ—Ç–ª–∏–≤ –∏ –∫–ª—é–µ—Ç –Ω–∞ –ø—Ä–æ—Å—Ç—ã–µ –Ω–∞—Å–∞–¥–∫–∏. –û—Ç–ª–∏—á–Ω–∞—è —Ä—ã–±–∞ –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö.',
                regulations: '–ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –ø–æ —Ä–∞–∑–º–µ—Ä—É –≤ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–µ —Ä–µ–≥–∏–æ–Ω–æ–≤'
            },
            {
                id: 'roach',
                name: '–ü–ª–æ—Ç–≤–∞',
                scientificName: 'Rutilus rutilus',
                emoji: 'üêü',
                gradient: 'from-teal-400 to-cyan-500',
                category: 'peaceful',
                difficulty: 'easy',
                popularity: 3,
                seasons: ['spring', 'summer', 'autumn', 'winter'],
                habitat: '–†–µ–∫–∏, –æ–∑–µ—Ä–∞, –ø—Ä—É–¥—ã',
                description: '–†–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω–∞—è –º–∏—Ä–Ω–∞—è —Ä—ã–±–∞ —Å–µ—Ä–µ–±—Ä–∏—Å—Ç–æ–≥–æ —Ü–≤–µ—Ç–∞ —Å –∫—Ä–∞—Å–Ω—ã–º–∏ –ø–ª–∞–≤–Ω–∏–∫–∞–º–∏.',
                size: '–î–æ 50 —Å–º, –æ–±—ã—á–Ω–æ 10-20 —Å–º',
                lifespan: '8-15 –ª–µ—Ç',
                diet: '–†–∞—Å—Ç–∏—Ç–µ–ª—å–Ω–∞—è –ø–∏—â–∞, –º–µ–ª–∫–∏–µ –±–µ—Å–ø–æ–∑–≤–æ–Ω–æ—á–Ω—ã–µ',
                bestBait: '–ú–æ—Ç—ã–ª—å, —á–µ—Ä–≤—å, —Ö–ª–µ–±',
                bestTime: '–í–µ—Å—å –¥–µ–Ω—å',
                tips: '–ü–ª–æ—Ç–≤–∞ –∫–ª—é–µ—Ç –∫—Ä—É–≥–ª—ã–π –≥–æ–¥. –ó–∏–º–æ–π –∞–∫—Ç–∏–≤–Ω–∞ –∏ —Ö–æ—Ä–æ—à–æ –ª–æ–≤–∏—Ç—Å—è –Ω–∞ –º–æ—Ä–º—ã—à–∫–∏.',
                regulations: '–ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –ø–æ —Ä–∞–∑–º–µ—Ä—É –≤ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–µ —Ä–µ–≥–∏–æ–Ω–æ–≤'
            },
            {
                id: 'ide',
                name: '–Ø–∑—å',
                scientificName: 'Leuciscus idus',
                emoji: 'üêü',
                gradient: 'from-indigo-400 to-blue-500',
                category: 'peaceful',
                difficulty: 'medium',
                popularity: 3,
                seasons: ['spring', 'summer', 'autumn'],
                habitat: '–†–µ–∫–∏, –æ–∑–µ—Ä–∞',
                description: '–ö—Ä—É–ø–Ω–∞—è –º–∏—Ä–Ω–∞—è —Ä—ã–±–∞ —Å —Å–µ—Ä–µ–±—Ä–∏—Å—Ç—ã–º –±–ª–µ—Å–∫–æ–º. –û—Å—Ç–æ—Ä–æ–∂–Ω–∞ –∏ —Ç—Ä–µ–±—É–µ—Ç –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–∞.',
                size: '–î–æ 80 —Å–º, –≤–µ—Å –¥–æ 8 –∫–≥',
                lifespan: '15-20 –ª–µ—Ç',
                diet: '–†–∞—Å—Ç–∏—Ç–µ–ª—å–Ω–∞—è –ø–∏—â–∞, –Ω–∞—Å–µ–∫–æ–º—ã–µ, –º–æ–ª–ª—é—Å–∫–∏',
                bestBait: '–ú–æ—Ç—ã–ª—å, —á–µ—Ä–≤—å, —Ä–∞—Å—Ç–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å–∞–¥–∫–∏',
                bestTime: '–£—Ç—Ä–æ –∏ –≤–µ—á–µ—Ä',
                tips: '–Ø–∑—å –æ—á–µ–Ω—å –æ—Å—Ç–æ—Ä–æ–∂–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–Ω–∫–∏–µ —Å–Ω–∞—Å—Ç–∏ –∏ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –Ω–∞—Å–∞–¥–∫–∏.',
                regulations: '–ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –ø–æ —Ä–∞–∑–º–µ—Ä—É –≤ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–µ —Ä–µ–≥–∏–æ–Ω–æ–≤'
            },
            {
                id: 'asp',
                name: '–ñ–µ—Ä–µ—Ö',
                scientificName: 'Aspius aspius',
                emoji: 'üêü',
                gradient: 'from-green-400 to-teal-500',
                category: 'predatory',
                difficulty: 'hard',
                popularity: 4,
                seasons: ['spring', 'summer', 'autumn'],
                habitat: '–ë–æ–ª—å—à–∏–µ —Ä–µ–∫–∏',
                description: '–ë—ã—Å—Ç—Ä–∞—è —Ö–∏—â–Ω–∞—è —Ä—ã–±–∞, –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é—â–∞—è —Ç–µ—á–µ–Ω–∏–µ. –ó–∞–Ω–æ—Å–∏—Ç—Å—è –≤ –ö—Ä–∞—Å–Ω—É—é –∫–Ω–∏–≥—É.',
                size: '–î–æ 120 —Å–º, –≤–µ—Å –¥–æ 12 –∫–≥',
                lifespan: '15-20 –ª–µ—Ç',
                diet: '–†—ã–±–∞, –Ω–∞—Å–µ–∫–æ–º—ã–µ',
                bestBait: '–ë–ª–µ—Å–Ω—ã, –≤–æ–±–ª–µ—Ä—ã, –º—É—à–∫–∏',
                bestTime: '–£—Ç—Ä–æ –∏ –≤–µ—á–µ—Ä',
                tips: '–ñ–µ—Ä–µ—Ö - —Ä—ã–±–∞ —Ç–µ—á–µ–Ω–∏—è. –õ–æ–≤–∏—Ç–µ –Ω–∞ —Å–ø–∏–Ω–Ω–∏–Ω–≥ —Å –±—ã—Å—Ç—Ä–æ–π –ø—Ä–æ–≤–æ–¥–∫–æ–π –ø–æ —Ç–µ—á–µ–Ω–∏—é.',
                regulations: '–ó–∞–Ω–µ—Å–µ–Ω –≤ –ö—Ä–∞—Å–Ω—É—é –∫–Ω–∏–≥—É –≤ —Ä—è–¥–µ —Ä–µ–≥–∏–æ–Ω–æ–≤, –ª–æ–≤–ª—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∞'
            },
            {
                id: 'chub',
                name: '–ì–æ–ª–∞–≤–ª—å',
                scientificName: 'Squalius cephalus',
                emoji: 'üêü',
                gradient: 'from-yellow-400 to-green-500',
                category: 'peaceful',
                difficulty: 'medium',
                popularity: 3,
                seasons: ['spring', 'summer', 'autumn'],
                habitat: '–ë—ã—Å—Ç—Ä—ã–µ —Ä–µ–∫–∏ –∏ —Ä—É—á—å–∏',
                description: '–†—ã–±–∞ —Å–µ–º–µ–π—Å—Ç–≤–∞ –∫–∞—Ä–ø–æ–≤—ã—Ö, –æ–±–∏—Ç–∞—é—â–∞—è –≤ —á–∏—Å—Ç—ã—Ö –±—ã—Å—Ç—Ä—ã—Ö –≤–æ–¥–∞—Ö.',
                size: '–î–æ 60 —Å–º, –≤–µ—Å –¥–æ 8 –∫–≥',
                lifespan: '12-15 –ª–µ—Ç',
                diet: '–ù–∞—Å–µ–∫–æ–º—ã–µ, —Ä–∞–∫–æ–æ–±—Ä–∞–∑–Ω—ã–µ, —Ä–∞—Å—Ç–∏—Ç–µ–ª—å–Ω–∞—è –ø–∏—â–∞',
                bestBait: '–ú—É—à–∫–∏, –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–µ –Ω–∞—Å–∞–¥–∫–∏',
                bestTime: '–î–µ–Ω—å',
                tips: '–ì–æ–ª–∞–≤–ª—å –ª—é–±–∏—Ç —á–∏—Å—Ç—É—é –≤–æ–¥—É. –õ—É—á—à–µ –≤—Å–µ–≥–æ –ª–æ–≤–∏—Ç—å –Ω–∞—Ö–ª—ã—Å—Ç–æ–º –≤–≤–µ—Ä—Ö –ø–æ —Ç–µ—á–µ–Ω–∏—é.',
                regulations: '–ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –ø–æ —Ä–∞–∑–º–µ—Ä—É –≤ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–µ —Ä–µ–≥–∏–æ–Ω–æ–≤'
            },
            {
                id: 'tench',
                name: '–õ–∏–Ω—å',
                scientificName: 'Tinca tinca',
                emoji: 'üêü',
                gradient: 'from-emerald-400 to-green-600',
                category: 'peaceful',
                difficulty: 'medium',
                popularity: 3,
                seasons: ['spring', 'summer', 'autumn'],
                habitat: '–ó–∞—Ä–æ—Å—à–∏–µ –ø—Ä—É–¥—ã –∏ –æ–∑–µ—Ä–∞',
                description: '–ú–∏—Ä–Ω–∞—è —Ä—ã–±–∞ –∑–µ–ª–µ–Ω–æ–≤–∞—Ç–æ-–±—É—Ä–æ–≥–æ —Ü–≤–µ—Ç–∞, –æ–±–∏—Ç–∞—é—â–∞—è –≤ –∑–∞—Ä–æ—Å—à–∏—Ö –≤–æ–¥–æ–µ–º–∞—Ö.',
                size: '–î–æ 70 —Å–º, –≤–µ—Å –¥–æ 10 –∫–≥',
                lifespan: '20-30 –ª–µ—Ç',
                diet: '–ß–µ—Ä–≤–∏, –º–æ–ª–ª—é—Å–∫–∏, —Ä–∞—Å—Ç–∏—Ç–µ–ª—å–Ω–∞—è –ø–∏—â–∞',
                bestBait: '–ß–µ—Ä–≤–∏, –ª–∏—á–∏–Ω–∫–∏, —Ä–∞—Å—Ç–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å–∞–¥–∫–∏',
                bestTime: '–ù–æ—á—å –∏ —Ä–∞–Ω–Ω–µ–µ —É—Ç—Ä–æ',
                tips: '–õ–∏–Ω—å –æ–±–∏—Ç–∞–µ—Ç –≤ –∑–∞—Ä–æ—Å—à–∏—Ö –º–µ—Å—Ç–∞—Ö. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç—è–∂–µ–ª—ã–µ –æ—Å–Ω–∞—Å—Ç–∫–∏ –¥–ª—è –¥–æ—Å—Ç–∞–≤–∫–∏ –Ω–∞—Å–∞–¥–∫–∏.',
                regulations: '–ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –ø–æ —Ä–∞–∑–º–µ—Ä—É –≤ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–µ —Ä–µ–≥–∏–æ–Ω–æ–≤'
            }
        ];
    }

    // Show fish details modal
    showFishDetails(fishId) {
        const fish = this.fishData.find(f => f.id === fishId);
        if (!fish) return;

        const modal = document.getElementById('fish-modal');
        const modalTitle = document.getElementById('modal-title');
        const modalContent = document.getElementById('modal-content');

        modalTitle.textContent = fish.name;
        
        modalContent.innerHTML = `
            <div class="grid md:grid-cols-2 gap-6 mb-6">
                <div>
                    <div class="w-full h-64 bg-gradient-to-br ${fish.gradient} rounded-xl flex items-center justify-center mb-4">
                        <span class="text-8xl">${fish.emoji}</span>
                    </div>
                    
                    <div class="space-y-3">
                        <div class="flex items-center justify-between p-3 bg-slate-50 rounded-lg">
                            <span class="font-semibold text-slate-700">–ö–∞—Ç–µ–≥–æ—Ä–∏—è</span>
                            <span class="text-sm px-2 py-1 bg-blue-100 text-blue-800 rounded-full">
                                ${fish.category === 'predatory' ? '–•–∏—â–Ω–∞—è' : fish.category === 'peaceful' ? '–ú–∏—Ä–Ω–∞—è' : '–†–µ–¥–∫–∞—è'}
                            </span>
                        </div>
                        
                        <div class="flex items-center justify-between p-3 bg-slate-50 rounded-lg">
                            <span class="font-semibold text-slate-700">–°–ª–æ–∂–Ω–æ—Å—Ç—å –ª–æ–≤–ª–∏</span>
                            <span class="text-sm px-2 py-1 ${
                                fish.difficulty === 'easy' ? 'bg-green-100 text-green-800' :
                                fish.difficulty === 'medium' ? 'bg-yellow-100 text-yellow-800' :
                                'bg-red-100 text-red-800'
                            } rounded-full">
                                ${fish.difficulty === 'easy' ? '–õ–µ–≥–∫–æ' : fish.difficulty === 'medium' ? '–°—Ä–µ–¥–Ω–µ' : '–°–ª–æ–∂–Ω–æ'}
                            </span>
                        </div>
                        
                        <div class="flex items-center justify-between p-3 bg-slate-50 rounded-lg">
                            <span class="font-semibold text-slate-700">–ü–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—å</span>
                            <div class="flex items-center">
                                <span class="text-sm font-medium text-slate-600">${fish.popularity}/5</span>
                                <span class="ml-1 text-yellow-400">‚≠ê</span>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div>
                    <div class="mb-6">
                        <h3 class="font-semibold text-slate-800 mb-2">–ù–∞—É—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ</h3>
                        <p class="text-slate-600 italic">${fish.scientificName}</p>
                    </div>
                    
                    <div class="mb-6">
                        <h3 class="font-semibold text-slate-800 mb-2">–°—Ä–µ–¥–∞ –æ–±–∏—Ç–∞–Ω–∏—è</h3>
                        <p class="text-slate-600">${fish.habitat}</p>
                    </div>
                    
                    <div class="mb-6">
                        <h3 class="font-semibold text-slate-800 mb-2">–†–∞–∑–º–µ—Ä –∏ –≤–æ–∑—Ä–∞—Å—Ç</h3>
                        <p class="text-slate-600 mb-1"><strong>–†–∞–∑–º–µ—Ä:</strong> ${fish.size}</p>
                        <p class="text-slate-600"><strong>–í–æ–∑—Ä–∞—Å—Ç:</strong> ${fish.lifespan}</p>
                    </div>
                    
                    <div class="mb-6">
                        <h3 class="font-semibold text-slate-800 mb-2">–ü–∏—Ç–∞–Ω–∏–µ</h3>
                        <p class="text-slate-600">${fish.diet}</p>
                    </div>
                    
                    <div class="mb-6">
                        <h3 class="font-semibold text-slate-800 mb-2">–°–µ–∑–æ–Ω –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</h3>
                        <div class="flex space-x-2">
                            ${fish.seasons.map(season => `
                                <div class="flex items-center px-3 py-1 bg-slate-100 rounded-full">
                                    <div class="season-indicator season-${season} mr-2"></div>
                                    <span class="text-sm font-medium">${this.getSeasonName(season)}</span>
                                </div>
                            `).join('')}
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="grid md:grid-cols-2 gap-6 mb-6">
                <div class="bg-blue-50 rounded-xl p-4">
                    <h3 class="font-semibold text-slate-800 mb-3">–õ—É—á—à–∏–µ –Ω–∞—Å–∞–¥–∫–∏</h3>
                    <p class="text-slate-600">${fish.bestBait}</p>
                </div>
                
                <div class="bg-orange-50 rounded-xl p-4">
                    <h3 class="font-semibold text-slate-800 mb-3">–õ—É—á—à–µ–µ –≤—Ä–µ–º—è</h3>
                    <p class="text-slate-600">${fish.bestTime}</p>
                </div>
            </div>
            
            <div class="mb-6">
                <h3 class="font-semibold text-slate-800 mb-3">–û–ø–∏—Å–∞–Ω–∏–µ</h3>
                <p class="text-slate-600 leading-relaxed">${fish.description}</p>
            </div>
            
            <div class="mb-6">
                <h3 class="font-semibold text-slate-800 mb-3">–°–æ–≤–µ—Ç—ã –ø–æ –ª–æ–≤–ª–µ</h3>
                <div class="bg-green-50 rounded-xl p-4">
                    <p class="text-slate-700">${fish.tips}</p>
                </div>
            </div>
            
            <div class="bg-yellow-50 rounded-xl p-4">
                <h3 class="font-semibold text-slate-800 mb-2">–ü—Ä–∞–≤–∏–ª–∞ –∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è</h3>
                <p class="text-slate-700 text-sm">${fish.regulations}</p>
            </div>
        `;

        modal.classList.add('show');
    }
}

// Utility functions
function showFishDetails(fishId) {
    if (window.fishGuidePage) {
        window.fishGuidePage.showFishDetails(fishId);
    }
}

function closeModal() {
    const modal = document.getElementById('fish-modal');
    if (modal) {
        modal.classList.remove('show');
    }
}

// Close modal when clicking outside
window.addEventListener('click', (e) => {
    const modal = document.getElementById('fish-modal');
    if (modal && e.target === modal) {
        closeModal();
    }
});

// Initialize page when DOM is loaded
document.addEventListener('DOMContentLoaded', () => {
    window.fishGuidePage = new FishGuidePage();
});